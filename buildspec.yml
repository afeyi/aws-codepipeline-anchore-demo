version: 0.2

phases:
  install:
    commands:
      - apt-get update -y
      - apt-get -y install python3-pip
      - pip3 install anchorecli
  pre_build:
    commands:
      - echo logging into Amazon ECR
      - aws --version
      - aws ecr get-login-password | docker login --username AWS --password-stdin 377877851685.dkr.ecr.eu-west-1.amazonaws.com
      - COMMIT_HASH=$(echo $CODEDBUILD_RESOLVED_SOURCE_VERSION  |  cut -c 1-7 )
      - IMAGE_TAG=build-$(echo $CODEDBUILD_BUILD_ID)

  build:
    commands:
      - echo Build started on  `date`
      - echo Building the Docker image…
      - REPOSITORY_URI=377877851685.dkr.ecr.eu-west-1.amazonaws.com/anchore-codebuildproject
      - docker build -t $REPOSITORY_URI:latest .
      - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG
      - docker push $REPOSITORY_URI:latest

  post_build:
    commands:
      - echo Build completed on  `date`
      - anchore-cli registry add 377877851685.dkr.ecr.eu-west-1.amazonaws.com $MY_AWS_ACCESS_KEY_ID $MY_AWS_SECRET_ACCESS_KEY --registry-type=awsecr
      - anchore-cli image add $REPOSITORY_URI:latest
      - echo "Waiting for image to finish analysis"
      - anchore-cli image wait $REPOSITORY_URI:latest
      - echo "Analysis complete"
      - anchore-cli image content $REPOSITORY_URI:latest os | tee $REPOSITORY_URI:latest.txt
      - anchore-cli image vuln $REPOSITORY_URI:latest all | tee $REPOSITORY_URI:latest.txt
      - echo "results of the SBOM and vulnerability scan complete!"
      - sleep 1m
      #- if [ "$ANCHORE_FAIL_ON_POLICY" = "true" ] ; then anchore-cli evaluate check $REPOSITORY_URI:latest  ; fi
      - echo "Pushing the docker images”     
      - docker push $REPOSITORY_URI:latest
      
    finally:
      - anchore-cli registry del 377877851685.dkr.ecr.eu-west-1.amazonaws.com
      - ls -la
      - aws s3 cp $REPOSITORY_URI:content.txt s3://kunle-test/Anchore/
      - aws s3 cp $REPOSITORY_URI:vuln.txt s3://kunle-test/Anchore/
      - echo "results of the SBOM and vulnerability sent to S3!"
      
